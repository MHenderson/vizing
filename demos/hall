#!/usr/bin/python

# In this demo we show how to use Hall's condition to demonstrate the
# non-existence of a list-colouring. In this case, we look at the 4 cycle.
#    
# 0 -- 1
# |    |
# 3 -- 2
#
# The list assignment in question assigns colour 1 to node 0, colour 2 to
# node 2 and the empty set to nodes 1 and 3.

from networkx import cycle_graph

from vizing.hall import hall_inequality_induced_by
from vizing.utils import powerset

L = {0: [1], 1: [], 2: [2], 3: []}

G = cycle_graph(4)

# We iterate over all induced subgraphs H of G and print the nodes of
# H if Hall's inequality fails on H.

for H in powerset(G.nodes()):
    if not hall_inequality_induced_by(G, L, [1,2], H):
        print H
